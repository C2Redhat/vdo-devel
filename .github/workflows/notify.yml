name: Notify

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:    

jobs:
  notify_schedule:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_open_prs
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo 'latest release: ${{ steps.get_latest_release.outputs.data }}'"    
      - name: Get All PRs
        env:
          OWNER: dm-vdo
          REPO: vdo-devel
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          openPRs="$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='
            query { 
              search(
                type: ISSUE, 
                query: """repo:"dm-vdo/vdo-devel", state:open, is:pr, -label:"free",""",
                last: 100,    
              ) {
                pullRequests: edges {
                  pullRequest: node {
                    ... on PullRequest {
                      assignees(first: 10) {
                        edges {
                          assignee: node {
                            name
                          }
                        }
                      }
                      reviewDecision
                      reviewRequests(first: 10) {
                        edges {
                          reviewRequest: node {
                            requestedReviewer {
                              ... on User {
                                name
                              }
                            }
                          }
                        }
                      }
                      reviews(first: 10) {
                        edges {
                          review: node {
                            author {
                              ... on User {
                                name
                              }
                            }
                            state
                          }
                        }
                      }
                      title                                      
                    }
                  }
                }
              }
            }
          ') --jq data.pullRequests"
